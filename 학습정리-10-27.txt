1. Maker 인터페이스에 대하여 설명하시오.
2. 추상 클래스(abstract class)에 대하여 설명하시오.
3.Exception 에 대하여 설명하시오.
4.에러를 내는 주체는?

5. 아래의 소스코드를 참고 하여 중에 Main안에 있는 두개의
getAllArea 과 getArea 함수를 완성하시오.
================================
interface AreaGetable {
	double getArea();

}

class Circle implements AreaGetable {
	private double r;

	public Circle(double r) {
		this.r = r;
	}

	@Override
	public double getArea() {

		return r * r * Math.PI;
	}
}

class Rectangle implements AreaGetable {

	private double width, height;

	public Rectangle(double width, double height) {
		this.height = height;
		this.width = width;
	}

	@Override
	public double getArea() {
		// TODO Auto-generated method stub
		return width * height;
	}
}


class CondOp {
	public static void main(String[] args) {

		AreaGetable[] area = { new Rectangle(4, 5), new Circle(4), new Circle(4), new Circle(5), new Circle(5),
				new Circle(6) ,new Rectangle(4, 5),new Rectangle(4, 5),new Rectangle(4, 5),};

		// AreaGetable oneArea = new Circle(4);
		System.out.println(getAllArea(area));
		System.out.println(getArea(new Circle(10))); //314
		System.out.println(getArea(new Rectangle(4, 5))); //20

		// oneArea = new Rectangle(4,5);
		// System.out.println(area.getArea());

	}
}

public static double getAllArea(AreaGetable[] area) {
		  
		  double sum = 0;
		  for (AreaGetable areaGetable : area) {
			  sum += areaGetable.getArea();
		  }
		  
		  /*for(int i = 0; i < area.length; i++) {
			  sum += area[i].getArea();
		  }
		  */
		   
		  return sum;
	}
	/*
	public static double getArea(Circle c) {
		return c.getArea();
	}
	
	public static double getArea(Rectangle rec) {
		return rec.getArea();
	}
	*/
	public static double getArea(AreaGetable ar) {
		return ar.getArea();
	}


6. 아래의 결과를 나타내는 사칙연산 계산기를 완성하시오.
-주의 잘못된 입력이 있으면 처음부터 다시 입력을 받도록 
예외처리 구문(try catch)을 넣을것


*** 계산기 ***
수1 : 10
수2 : 20
연산 : +
계산 결과 : 30
계속 하시겠습니까? 계속 : Y , 종료 : N
y
*** 계산기 ***
수1 : R
잘못된 입력입니다. 다시입력해 주세요
*** 계산기 ***
수1 : 10
수2 : 20
연산 : *
계산 결과 : 200
계속 하시겠습니까? 계속 : Y , 종료 : N
y
*** 계산기 ***
수1 : 90
수2 : 80
연산 : /
계산 결과 : 1
계속 하시겠습니까? 계속 : Y , 종료 : N
n
종료입니다.

while(true) {
			
			Scanner sc = new Scanner(System.in);
			
		try {
			System.out.println("*** 계산기 ***");
			System.out.print("수1 :\s");
			int n1 = sc.nextInt();
			System.out.print("수2 :\s");
			int n2 = sc.nextInt();
			System.out.print("연산 :\s");
			String n3 = sc.next();
			if(n3.equals("+"))
				System.out.println(n1 + n2);
			else if(n3.equals("-"))
				System.out.println(n1 - n2);
			else if(n3.equals("*"))
				System.out.println(n1 * n2);
			else if(n3.equals("/"))
				System.out.println(n1 / n2);
				
			System.out.println("계속 하시겠습니까? 계속 : Y , 종료 : N");
			String n4 = sc.next();
			
			if(n4.equals("Y") || n4.equals("y"))
				continue;
			else if(n4.equals("N") || n4.equals("n"))
				System.out.println("종료입니다");
				break;
			
		} catch (Exception e) {
			System.out.println("잘못된 입력입니다. 다시입력해 주세요");
		}
		
		}